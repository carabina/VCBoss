{"Extensions/UIViewController.html#/s:So16UIViewControllerC6VCBossE6vcbossA2CCv":{"name":"vcboss","abstract":"<p>Get an instance of VCBoss for the current UIViewController.</p>","parent_name":"UIViewController"},"Extensions/UIViewController.html":{"name":"UIViewController","abstract":"<p>Set of UIViewController extensions to interact with VCBoss easily to make working with VCBoss easier.</p>"},"Enums/VCBossError.html#/s:6VCBoss0A5ErrorO35dismissViewControllerNeverPresentedA2CmF":{"name":"dismissViewControllerNeverPresented","abstract":"<p>If you try to dismiss a UIViewController that was never presented using VCBoss. You either forgot to present it, or you used <code>self.present()</code> instead of <code>self.vcboss.present()</code> to present the UIViewController.</p>","parent_name":"VCBossError"},"Enums/VCBossError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgv":{"name":"errorDescription","parent_name":"VCBossError"},"Enums/VCBossError.html":{"name":"VCBossError","abstract":"<p>Errors that VCBoss can throw.</p>"},"Classes/VCBoss.html#/s:6VCBossAAC20parentViewControllerSo06UIViewD0CSgXwv":{"name":"parentViewController","abstract":"<p>Undocumented</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC8instanceABSo16UIViewControllerC3for_tFZ":{"name":"instance(for:)","abstract":"<p>Use to get instance of VCBoss for UIViewController doing all of the presenting of UIViewControllers. You can think of this as the <q>parenet</q> UIViewController showing <q>children</q> UIViewController&rsquo;s modally.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC25numViewControllersInStackSiv":{"name":"numViewControllersInStack","abstract":"<p>If you are interested to see how many UIViewControllers are in the stack of UIViewControllers to show modally.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC7presentySo16UIViewControllerC_Sb8animatedyycSg10completionSb5forcetF":{"name":"present(_:animated:completion:force:)","abstract":"<p>Present this UIViewController now if no other UIViewController is presented, or show it in the future when it&rsquo;s turn is next.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC32presentOnlyIfNothingAlreadyShownySo16UIViewControllerC_Sb8animatedyycSg10completiontF":{"name":"presentOnlyIfNothingAlreadyShown(_:animated:completion:)","abstract":"<p>If another UIViewController is already being shown, ignore showing this one. Else, present it.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC7replaceySo16UIViewControllerC4with_Sb8animatedyycSg10completiontF":{"name":"replace(with:animated:completion:)","abstract":"<p>Take the currently shown ViewController, dismiss it, and force show this one immediately after.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html#/s:6VCBossAAC7dismissySo16UIViewControllerC_Sb8animatedyycSg10completiontKF":{"name":"dismiss(_:animated:completion:)","abstract":"<p>Dismiss this UIViewController given. Then, present the next one in line if there is one.</p>","parent_name":"VCBoss"},"Classes/VCBoss.html":{"name":"VCBoss","abstract":"<p>Class used by a UIViewController to manage presenting and dismissing of UIViewControllers in a safe way. iOS throws errors if you try to call <code>self.present()</code> inside of a UIViewController when another UIViewController is already being shown. Replace all of your existing <code>self.present()</code> calls with using VCBoss and be safe knowing only 1 ViewController will be shown at a time.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"}}